image: maven:3-eclipse-temurin-21-jammy

options:
  max-time: 12

stepdefinitions:
  - build: &build
      name: Build
      size: 4x
      caches:
        - maven
      script:
        - java -version
        - mvn --version
        - mvn clean install
        - rm -rf ~/.m2/repository/org/entrystore/
      artifacts:
        - modules/rest-standalone/*/target/**
  - deploy: &deploy
      name: Deploy
      script:
        - apt update && apt install -y gnupg openssh-client
        - gpg --version
        - echo $GPG_SIGN_KEY | base64 -d | gpg --import
        - gpg --list-secret-keys
        - export VERSION=`cat VERSION.txt` && echo $VERSION
        # We allow semantic versioning plus x.y-z (e.g. 4.10-SNAPSHOT which does not exactly conform to semver)
        - echo $VERSION | grep -P -q '^(0|[1-9]\d*)\.(0|[1-9]\d*)(\.*)(0*|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'
        - export FILE_BASE_JETTY="entrystore-jetty-$VERSION" && echo $FILE_BASE_JETTY
        - ( cd modules/rest-standalone/jetty/target/dist/ && tar czf ${FILE_BASE_JETTY}.tar.gz * && sha256sum ${FILE_BASE_JETTY}.tar.gz > ${FILE_BASE_JETTY}.tar.gz.sha256 && gpg --clearsign --default-key 4C12C06EE69EBA383C1A47C61010232068FF1D01 ${FILE_BASE_JETTY}.tar.gz.sha256 )
        - scp -v modules/rest-standalone/jetty/target/dist/{*.tar.gz,*.sha256.asc} deploy@meta1.metasolutions.se:/var/www/entrystore.org/download/
        - if [ $BITBUCKET_BRANCH == "develop" ]; then ssh deploy@meta1.metasolutions.se "echo $VERSION > /var/www/entrystore.org/download/develop.version" ; elif [ $BITBUCKET_BRANCH == "master" ]; then ssh deploy@meta1.metasolutions.se "echo $VERSION > /var/www/entrystore.org/download/latest.version" ; fi
  - dockerhub: &dockerhub
      name: Docker Hub
      script:
        - docker version
        - export VERSION=`cat VERSION.txt` && echo $VERSION
        - export VERSION_MAJOR_MINOR=${VERSION%.*} && echo $VERSION_MAJOR_MINOR
        - apt update && apt install -y openssh-client
        - git clone -b master git@bitbucket.org:metasolutions/docker.git
        - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
        - cd docker/entrystore
        - docker build --build-arg ENTRYSTORE_VERSION=$VERSION --pull --no-cache --tag metasolutions/entrystore:$VERSION .
        - docker push metasolutions/entrystore:$VERSION
        - if [ $BITBUCKET_BRANCH == "develop" ]; then docker tag metasolutions/entrystore:$VERSION metasolutions/entrystore:develop ; docker push metasolutions/entrystore:develop ; fi
        - if [ $BITBUCKET_BRANCH == "master" ]; then docker tag metasolutions/entrystore:$VERSION metasolutions/entrystore:$VERSION_MAJOR_MINOR ; docker push metasolutions/entrystore:$VERSION_MAJOR_MINOR ; fi
        # buildx is currently only supported with self-hosted runners, see https://confluence.atlassian.com/bbkb/building-multi-architecture-docker-images-with-bitbucket-pipelines-1252329371.html
        # - docker buildx create --use --platform=linux/arm64,linux/amd64 --name multi-platform-builder
        # - docker buildx build --build-arg ENTRYSTORE_VERSION=$VERSION --no-cache --pull --platform=linux/arm64,linux/amd64 --progress=plain --tag=$VERSION --push .
        # - if [ $BITBUCKET_BRANCH == "develop" ]; then docker buildx imagetools create -t metasolutions/entrystore:develop metasolutions/entrystore:$VERSION ; fi
        # - if [ $BITBUCKET_BRANCH == "master" ]; then docker buildx imagetools create -t metasolutions/entrystore:$VERSION_MAJOR_MINOR metasolutions/entrystore:$VERSION ; fi
      services:
        - docker
      caches:
        - docker
  - trivy: &trivy
      name: Trivy
      script:
        - export VERSION=`cat VERSION.txt` && echo $VERSION
        - pipe: aquasecurity/trivy-pipe:1.0.0
          variables:
            imageRef: 'docker.io/metasolutions/entrystore:$VERSION'
            format: 'table'
            exitCode: '1'
            ignoreUnfixed: 'true'
            vulnType: 'os,library'
            severity: 'CRITICAL,HIGH'
      services:
        - docker

pipelines:
  default:
    - step: *build
  branches:
    master:
      - step: *build
      - step: *deploy
      - step: *dockerhub
    develop:
      - step: *build
      - step: *deploy
      - step: *dockerhub
      - step: *trivy
