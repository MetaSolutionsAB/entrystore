{
  "swagger": "2.0",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "application/rdf+xml",
    "application/ld+json",
    "application/rdf+json",
    "application/trix",
    "application/x-trig",
    "text/n3",
    "text/turtle",
    "text/n-triples"
  ],
  "produces": [
    "application/json",
    "application/rdf+xml",
    "application/ld+json",
    "application/rdf+json",
    "application/trix",
    "application/x-trig",
    "text/n3",
    "text/turtle",
    "text/n-triples"
  ],
  "info": {
    "version": "4.2",
    "title": "EntryStore",
    "description": "This is the structured documentation of the EntryStore API. You can find out more about EntryStore (including a more verbose documentation of the API) at <a href=\"http://entrystore.org\">http://entrystore.org</a>.",
    "contact": {
      "name": "MetaSolutions AB",
      "url": "http://metasolutions.se",
      "email": "info@metasolutions.se"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "description": "EntryStore official documentation site",
    "url": "http://entrystore.org"
  },
  "definitions": {
  },
  "parameters": {
  },
  "responses": {
  },
  "paths": {
    "/management/backup": {
    },
    "/management/status": {
      "get": {
        "tags": ["management"],
        "summary": "Repository status",
        "operationId": "managementStatus",
        "produces": [
          "plain/text",
          "application/json"
        ],
        "parameters": [
          {
            "name": "extended",
            "in": "query",
            "description": "Authenticated users get access to the extended information in JSON",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeStats",
            "in": "query",
            "description": "Includes statistical information, requires paramater \"extended\"",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "403": {
            "description": "Insufficient rights for requested information"
          }
        }
      }
    },
    "/management/solr": {
      "get": {
        "tags": ["management"],
        "summary": "Manages the Solr index",
        "operationId": "managementSolr",
        "produces": [],
        "parameters": [
          {
            "name": "cmd",
            "in": "query",
            "description": "Specifies the command to be invoked",
            "required": true,
            "type": "string",
            "enum": ["reindex"]
          }
        ],
        "responses": {
          "202": {
            "description": "Command is accepted and being processed"
          },
          "400": {
            "description": "Invalid parameters"
          },
          "403": {
            "description": "Insufficient rights for requested information"
          },
          "404": {
            "description": "This EntryStore instance is not configured with Solr"
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": ["search"],
        "summary": "Searches the repository and returns entries",
        "operationId": "search",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Specifies which search backend to use",
            "required": true,
            "type": "string",
            "enum": ["solr"]
          },
          {
            "name": "query",
            "in": "query",
            "description": "A Solr-query string, see the Knowledge Base at entrystore.org for detailed information about available parameters",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Solr-style sorting",
            "required": false,
            "type": "string",
            "default": "score+desc,modified+desc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum amount of returned entries",
            "required": false,
            "type": "integer",
            "default": "50",
            "minimum": "1",
            "maximum": "100"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset (number of items, not page) to be used for pagination",
            "required": false,
            "type": "integer",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid query, e.g. too short or invalid parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/sparql": {
    },
    "/proxy": {
      "get": {
        "tags": ["proxy"],
        "summary": "Proxies requests to external hosts",
        "operationId": "proxy",
        "produces": [
          "*"
        ],
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "The URL to be fetched, redirects are followed",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromFormat",
            "in": "query",
            "description": "Source format to be converted to RDF, see Knowledge Base for a list of supported formats",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request, no URL provided or unable to fetch remote resource"
          },
          "403": {
            "description": "Forbidden, i.e., user not logged in"
          }
        }
      }
    },
    "/auth/user": {
    },
    "/auth/cookie": {
    },
    "/auth/basic": {
    },
    "/auth/login": {
      "get": {
        "tags": ["auth"],
        "summary": "Returns a basic HTML-form for login",
        "description": "It is recommended to use any of the other login-resources. Performs a cookie-based login and should only be used for testing purposes, does not really belong to the API.",
        "operationId": "loginHTML",
        "produces": ["text/html"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": ["auth"],
        "summary": "Performs a logout of the currently logged in user",
        "operationId": "logout",
        "produces": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "User successfully logged out"
          }
        }
      }
    },
    "/auth/signup": {
    },
    "/auth/pwreset": {
    },
    "/auth/openid/google": {
    },
    "/auth/openid/google/signup": {
    },
    "/auth/openid/yahoo": {
    },
    "/auth/openid/yahoo/signup": {
    },
    "/{context-id}": {
    },
    "/{context-id}/sparql": {
    },
    "/{context-id}/export": {
    },
    "/{context-id}/import": {
    },
    "/{context-id}/merge": {
    },
    "/{context-id}/entry/{entry-id}": {
    },
    "/{context-id}/entry/{entry-id}/name": {
    },
    "/{context-id}/resource/{entry-id}": {
    },
    "/{context-id}/metadata/{entry-id}": {
    },
    "/{context-id}/cached-external-metadata/{entry-id}": {
    },
    "/{context-id}/harvester": {
    },
    "/{context-id}/relation/{entry-id}": {
    },
    "/{context-id}/quota": {
    },
    "/{context-id}/lookup": {
    },
    "/{context-id}/execute": {
    }
  }
}