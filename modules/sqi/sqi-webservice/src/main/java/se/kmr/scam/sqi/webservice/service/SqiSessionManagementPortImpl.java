/**
 * Copyright (c) 2007-2010
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package se.kmr.scam.sqi.webservice.service;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

//import javax.jws.WebMethod;
//import javax.jws.WebParam;
//import javax.jws.WebResult;
//import javax.jws.WebService;
//import javax.jws.soap.SOAPBinding;
//import javax.jws.soap.SOAPBinding.ParameterStyle;
//import javax.xml.bind.annotation.XmlSeeAlso;
//import javax.xml.ws.RequestWrapper;
//import javax.xml.ws.ResponseWrapper;

import be.cenorm.isss.ltws.wsdl.sqiv1p0.DestroySession;
import be.cenorm.isss.ltws.wsdl.sqiv1p0.FaultCodeType;
import be.cenorm.isss.ltws.wsdl.sqiv1p0.SQIFault;

import be.cenorm.isss.ltws.wsdl.sqiv1p0.SQIFaultType;
import be.cenorm.isss.ltws.wsdl.sqiv1p0.SqiSessionManagementPort;
import se.kmr.scam.sqi.session.SqiSession;
import se.kmr.scam.sqi.session.SessionExpiredException;

/**
 * This class was generated by Apache CXF 2.1.4
 * Fri Feb 13 20:43:29 CET 2009
 * Generated source version: 2.1.4
 * 
 */


@javax.jws.WebService(
                      serviceName = "SqiSessionManagementService",
                      portName = "SqiSessionManagementPort",
                      targetNamespace = "urn:www.cenorm.be/isss/ltws/wsdl/SQIv1p0",
                      //wsdlLocation = "file:/home/micke/development/workspace/scam4-trunk/modules/sqi/sqi-webservice/src/main/webapp/WEB-INF/wsdl/sqiSessionManagement.wsdl",
                      endpointInterface = "be.cenorm.isss.ltws.wsdl.sqiv1p0.SqiSessionManagementPort")
/**
*
* 
* @author Mikael Karlsson (mikael.karlsson@educ.umu.se) 
*
*/                      
public class SqiSessionManagementPortImpl implements SqiSessionManagementPort {
	private static Logger log = LoggerFactory.getLogger(SqiSessionManagementPortImpl.class);

   
    /* (non-Javadoc)
     * @see be.cenorm.isss.ltws.wsdl.sqiv1p0.SqiSessionManagementPort#createAnonymousSession(*
     */
    public java.lang.String createAnonymousSession() throws SQIFault    { 
        log.info("Executing operation createAnonymousSession");
        try {
        	SqiSession session = SqiSession.newSession();
            log.info("createAnonymousSession:sessionID=" + session.toString());
        	return session.toString();

        } catch (Exception e) {
         	 log.error("createAnonymousSession: ", e);
         	 SQIFaultType fault = new SQIFaultType();
             fault.setSqiFaultCode(FaultCodeType.SQI_00001);
             fault.setMessage("Session creation failure");
        	 throw new SQIFault(e.getMessage(), fault);
        }
    }

    /* (non-Javadoc)
     * @see be.cenorm.isss.ltws.wsdl.sqiv1p0.SqiSessionManagementPort#createSession(java.lang.String  userID ,)java.lang.String  password )*
     */
    public java.lang.String createSession(java.lang.String userID,java.lang.String password) throws SQIFault    { 
    	log.info("createSession:userID=" + userID);
    		if (isAuthorized(userID, password)) {
    			try {
    				SqiSession session = SqiSession.newSession();
    				session.setParameter("userID", userID);
    				session.setParameter("password", password);
    				log.info("createSession:userID=" + userID + ", sessionID=" + session.toString());
    				return session.toString();
    			} catch (Exception e) {
    			    	  log.error("createSession: ", e);
    			    	  SQIFaultType fault = new SQIFaultType();
    			          fault.setSqiFaultCode(FaultCodeType.SQI_00001);
    			          fault.setMessage("Session creation failure");
    			          throw new SQIFault(e.getMessage(), fault);
    			}
    		} else {
    			log.debug("createSession:userID=" + userID + ": Wrong Credentials");
    			SQIFaultType fault = new SQIFaultType();
                fault.setSqiFaultCode(FaultCodeType.SQI_00015);
                fault.setMessage("Session creation failure: Wrong Credentials");
                throw new SQIFault("Session creation failure: Wrong Credentials", fault);
   			 }
    
    }

    /* (non-Javadoc)
     * @see be.cenorm.isss.ltws.wsdl.sqiv1p0.SqiSessionManagementPort#destroySession(be.cenorm.isss.ltws.wsdl.sqiv1p0.DestroySession  destroySession )*
     */
    public void destroySession(DestroySession destroySession) throws SQIFault    { 
    	log.info("destroySession:sessionID="+destroySession.getSessionID());
        try {
        	 String sessionID = destroySession.getSessionID();
        	 SqiSession session = SqiSession.getSession(sessionID);
        	 SqiSession.destroy(session);
        } catch (SessionExpiredException e) {
        	log.debug("destroySession: ", e);
        	 SQIFaultType fault = new SQIFaultType();
             fault.setSqiFaultCode(FaultCodeType.SQI_00013);
             fault.setMessage("No such session");
             throw new SQIFault(e.getMessage(), fault);
        }
   
    }
    
    private boolean isAuthorized(String userId, String password) {
    	// TOOD: only support AnonymousSession for now
    	return false;
    }
}
